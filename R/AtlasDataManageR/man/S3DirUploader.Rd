% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_s3-upload.r
\name{S3DirUploader}
\alias{S3DirUploader}
\title{S3 Directory Uploader Class}
\description{
This class provides a comprehensive interface for uploading local directories
to Amazon S3 buckets. It supports file filtering by patterns, custom naming
transformations, validation of S3 connections, and both sequential and
parallel upload modes.
}
\details{
An R6 class for uploading directories and files to Amazon S3 with support
for pattern filtering, custom naming functions, and parallel uploads.

Requires the 'future' and 'future.apply' packages to be installed.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{upload_id}}{character}

\item{\code{bucket}}{character. Name of the S3 bucket for uploads.}

\item{\code{public}}{logical. Whether to make uploaded folder public read/list.}

\item{\code{recursive}}{logical. Whether to include sub-directories in upload.
Initialize S3DirUploader}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{n_files}}{integer. Read-only. Number of files that will be uploaded.}

\item{\code{files}}{character. Read-only. List of files that will be uploaded.}

\item{\code{failed}}{list(character). Read-only. List of files that failed to upload.}

\item{\code{time}}{difftime. Read-only. Date of upload.}

\item{\code{date}}{list(character). Read-only. Date of upload.}

\item{\code{local_dir}}{character. The directory to be uploaded}

\item{\code{pattern_ft}}{character. The pattern to select which files/types to upload.}

\item{\code{name_fn}}{function. Name transformation function.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-S3_uploader-new}{\code{S3DirUploader$new()}}
\item \href{#method-S3_uploader-print}{\code{S3DirUploader$print()}}
\item \href{#method-S3_uploader-dry_run}{\code{S3DirUploader$dry_run()}}
\item \href{#method-S3_uploader-head}{\code{S3DirUploader$head()}}
\item \href{#method-S3_uploader-validate_con}{\code{S3DirUploader$validate_con()}}
\item \href{#method-S3_uploader-upload_files}{\code{S3DirUploader$upload_files()}}
\item \href{#method-S3_uploader-upload_files_parallel}{\code{S3DirUploader$upload_files_parallel()}}
\item \href{#method-S3_uploader-clone}{\code{S3DirUploader$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-new"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-new}{}}}
\subsection{Method \code{new()}}{
Creates a new S3DirUploader instance of \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$new(
  upload_id,
  local_dir,
  bucket,
  pattern_ft = NULL,
  name_fn = NULL,
  s3_inst = NULL,
  public = FALSE,
  recursive = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{character. Unique identifier for this upload session.}

\item{\code{local_dir}}{character. Path to the local directory to upload.}

\item{\code{bucket}}{character. Name of the target S3 bucket.}

\item{\code{pattern_ft}}{character or NULL. Regex pattern to filter files (default: NULL).}

\item{\code{name_fn}}{function or NULL. Function to transform file names for S3 keys (default: NULL).}

\item{\code{s3_inst}}{\link[paws.storage:s3]{paws.storage} or NULL.
An S3 client instance or if NULL one will be created (default: NULL).}

\item{\code{public}}{logical. Whether files should be publicly accessible (default: FALSE).}

\item{\code{recursive}}{logical. Whether to include subdirectories in upload (default: FALSE).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new S3DirUploader.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-print"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-print}{}}}
\subsection{Method \code{print()}}{
Print class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-dry_run"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-dry_run}{}}}
\subsection{Method \code{dry_run()}}{
Test to see what the export (s3) paths will be before uploading using the name_fn on the files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$dry_run(x = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{integer. Numbers of files to test.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-head"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-head}{}}}
\subsection{Method \code{head()}}{
Head local files that will be uploaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$head(x = 5)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{integer. Numbers of files to show.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-validate_con"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-validate_con}{}}}
\subsection{Method \code{validate_con()}}{
Validate the bucket and S3 connection are valid and permissions are correct.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$validate_con()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-upload_files"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-upload_files}{}}}
\subsection{Method \code{upload_files()}}{
Uploads all files to S3 sequentially. Validates connection first,
then uploads each file with retry logic.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$upload_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of upload results for each file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-upload_files_parallel"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-upload_files_parallel}{}}}
\subsection{Method \code{upload_files_parallel()}}{
Uploads files to S3 using parallel processing for improved performance
with large numbers of files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$upload_files_parallel(
  n_cores = 4,
  type = c("multicore", "multisession")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n_cores}}{integer. Number of cores to use for parallel processing (default: 4).}

\item{\code{type}}{character. Type of parallel backend: "multicore" or "multisession" (default: "multicore").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of upload results for each file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3_uploader-clone"></a>}}
\if{latex}{\out{\hypertarget{method-S3_uploader-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3DirUploader$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
