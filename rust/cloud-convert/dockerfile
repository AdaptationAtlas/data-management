FROM ubuntu:22.04 as builder

# Install all dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    flex \
    linux-libc-dev \
    python3 \
    python3-dev \
    bison \
    cmake \
    git \
    curl \
    zip \
    unzip \
    tar \
    pkg-config \
    ninja-build

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install and bootstrap vcpkg
WORKDIR /opt
RUN git clone https://github.com/Microsoft/vcpkg.git
WORKDIR /opt/vcpkg
RUN ./bootstrap-vcpkg.sh

# Build GDAL and all dependencies statically
RUN ./vcpkg install gdal[core,geos,sqlite3,archive,expat,curl,zstd,arrow]:x64-linux

# Set up environment for static linking
ENV VCPKG_ROOT=/opt/vcpkg
ENV GDAL_STATIC=1
ENV GDAL_INCLUDE_DIR=/opt/vcpkg/installed/x64-linux/include
ENV GDAL_LIB_DIR=/opt/vcpkg/installed/x64-linux/lib
ENV PKG_CONFIG_PATH=/opt/vcpkg/installed/x64-linux/lib/pkgconfig

RUN apt-get update && apt-get install -y \
  clang \
  libclang-dev

ENV LIBCLANG_PATH=/usr/lib/llvm-14/lib

# Build the Rust application
WORKDIR /app
COPY . .

# Configure for static linking with glibc

ENV RUSTFLAGS=""
RUN cargo build

ENV RUSTFLAGS="-C target-feature=+crt-static -C link-arg=-static-libgcc"
RUN cargo build --release --target x86_64-unknown-linux-gnu

